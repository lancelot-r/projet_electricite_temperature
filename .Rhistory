ar_model_1 = arima(res_ts_temp, order = c(1, 1, 0))
par(mfrow=c(2,1))
acf(ar_model_1$residuals, lag.max = 192)
pacf(ar_model_1$residuals, lag.max = 192)
ar_model_1 = arima(res_ts_temp, order = c(1, 0, 0))
par(mfrow=c(2,1))
acf(ar_model_1$residuals, lag.max = 192)
pacf(ar_model_1$residuals, lag.max = 192)
Box.test(ar_model_1$residuals, type="Ljung")
dwtest(ar_model_1$residuals, type="Ljung")
library(car)
dwtest
dwtest()
Box.test(ar_model_1$residuals, type="Ljung")
Box.test(auti_arima$residuals, type="Ljung")
ar_model_1 = arima(res_ts_temp, order = c(1, 0, 0))
Box.test(auti_arima$residuals, type="Ljung")
ar_model_1 = arima(res_ts_temp, order = c(1, 0, 0))
Box.test(ar_model_1$residuals, type="Ljung")
ar_model_1 = arima(res_ts_temp, order = c(2, 0, 0))
Box.test(ar_model_1$residuals, type="Ljung")
ar_model_1 = arima(res_ts_temp, order = c(1, 0, 0))
Box.test(ar_model_1$residuals, type="Ljung")
ar_model_1 = arima(res_ts_temp, order = c(1, 0, 1))
Box.test(ar_model_1$residuals, type="Ljung")
ar_model_1 = arima(res_ts_temp, order = c(1, 0, 0))
Box.test(ar_model_1$residuals, type="Ljung")
ar_model_1 = arima(res_ts_temp, order = c(0, 0, 0))
Box.test(ar_model_1$residuals, type="Ljung")
ar_model_1 = arima(res_ts_temp, order = c(0, 1, 0))
Box.test(ar_model_1$residuals, type="Ljung")
ar_model_1 = arima(res_ts_temp, order = c(0, 0, 2))
Box.test(ar_model_1$residuals, type="Ljung")
ar_model_1 = arima(res_ts_temp, order = c(0, 0, 1))
Box.test(ar_model_1$residuals, type="Ljung")
ar_model_1 = arima(res_ts_temp, order = c(1, 0, 0))
Box.test(ar_model_1$residuals, type="Ljung")
ar_model_1 = arima(res_ts_temp, order = c(2, 0, 0))
Box.test(ar_model_1$residuals, type="Ljung")
ar_model_1 = arima(res_ts_temp, order = c(1, 0, 1))
Box.test(ar_model_1$residuals, type="Ljung")
ar_model_1 = arima(res_ts_temp, order = c(2, 0, 0))
Box.test(ar_model_1$residuals, type="Ljung")
auti_arima
ar_model_1 = arima(res_ts_temp, order = c(1, 0, 0))
par(mfrow=c(1,2))
acf(ar_model_1$residuals, lag.max = 192)
pacf(ar_model_1$residuals, lag.max = 192)
ar_model_1 = arima(res_ts_temp, order = c(1, 0, 0))
par(mfrow=c(1,2))
acf(ar_model_1$residuals)
pacf(ar_model_1$residuals)
auti_arima
# Calcul de la série résiduelle :
res_ts_temp = ts_temp_deseason - lm2$fitted.values
pvalBox = Box.test(res_ts_temp, type="Ljung")
par(mfrow=c(1,2))
acf(res_ts_temp, main="serie1 csv - est. tend.", lag.max = 192)
pacf(res_ts_temp, lag.max = 192)
adf.test(res_ts_temp)
kpss.test(res_ts_temp)
# Calcul de la série résiduelle :
res_ts_temp = ts_temp_deseason - lm2$fitted.values
pvalBox = Box.test(res_ts_temp, type="Ljung")
par(mfrow=c(1,2))
acf(res_ts_temp, main="serie1 csv - est. tend.")
pacf(res_ts_temp)
adf.test(res_ts_temp)
kpss.test(res_ts_temp)
ar_model_1 = arima(res_ts_temp, order = c(2, 0, 0))
par(mfrow=c(1,2))
acf(ar_model_1$residuals)
pacf(ar_model_1$residuals)
ar_model_1 = arima(res_ts_temp, order = c(2, 0, 1))
par(mfrow=c(1,2))
acf(ar_model_1$residuals)
pacf(ar_model_1$residuals)
ar_model_1 = arima(res_ts_temp, order = c(2, 0, 0))
par(mfrow=c(1,2))
acf(ar_model_1$residuals)
pacf(ar_model_1$residuals)
ar_model_1 = arima(res_ts_temp, order = c(1, 0, 0))
par(mfrow=c(1,2))
acf(ar_model_1$residuals)
pacf(ar_model_1$residuals)
ar_model_1 = arima(res_ts_temp, order = c(2, 0, 0))
par(mfrow=c(1,2))
acf(ar_model_1$residuals)
pacf(ar_model_1$residuals)
ar_model_1 = arima(res_ts_temp, order = c(0, 0, 0))
par(mfrow=c(1,2))
acf(ar_model_1$residuals)
pacf(ar_model_1$residuals)
ar_model_1 = arima(res_ts_temp, order = c(2, 0, 0))
par(mfrow=c(1,2))
acf(ar_model_1$residuals)
pacf(ar_model_1$residuals)
ar_model_1 = arima(res_ts_temp, order = c(2, 0, 1))
par(mfrow=c(1,2))
acf(ar_model_1$residuals)
pacf(ar_model_1$residuals)
ar_model_1 = arima(res_ts_temp, order = c(2, 0, 0))
par(mfrow=c(1,2))
acf(ar_model_1$residuals)
pacf(ar_model_1$residuals)
Box.test(ar_model_1$residuals, type="Ljung")
Box.test(auti_arima$residuals, type="Ljung")
Box.test(ar_model_1$residuals, type="Ljung")
auti_arima
ar_model_1 = arima(res_ts_temp, order = c(0, 0, 1))
par(mfrow=c(1,2))
acf(ar_model_1$residuals)
pacf(ar_model_1$residuals)
ar_model_1 = arima(res_ts_temp, order = c(0, 0, 2))
par(mfrow=c(1,2))
acf(ar_model_1$residuals)
pacf(ar_model_1$residuals)
ar_model_1 = arima(res_ts_temp, order = c(1, 0, 2))
par(mfrow=c(1,2))
acf(ar_model_1$residuals)
pacf(ar_model_1$residuals)
ar_model_1 = arima(res_ts_temp, order = c(0, 0, 0), seasonal = list(order = c(0, 0, 2), period = 24))
par(mfrow=c(1,2))
acf(ar_model_1$residuals)
pacf(ar_model_1$residuals)
ar_model_1 = arima(res_ts_temp, order = c(1, 0, 0), seasonal = list(order = c(0, 0, 2), period = 24))
par(mfrow=c(1,2))
acf(ar_model_1$residuals)
pacf(ar_model_1$residuals)
ar_model_1 = arima(res_ts_temp, order = c(1, 0, 2), seasonal = list(order = c(0, 0, 2), period = 24))
par(mfrow=c(1,2))
acf(ar_model_1$residuals)
pacf(ar_model_1$residuals)
# Calcul de la série résiduelle :
res_ts_temp = ts_temp_deseason - lm2$fitted.values
pvalBox = Box.test(res_ts_temp, type="Ljung")
par(mfrow=c(1,2))
acf(res_ts_temp, main="serie1 csv - est. tend.", lag.max = 96)
pacf(res_ts_temp)
ar_model_1 = arima(res_ts_temp, order = c(1, 0, 1), seasonal = list(order = c(0, 0, 1), period = 24))
ar_model_2 = arima(res_ts_temp, order = c(1, 0, 2), seasonal = list(order = c(0, 0, 2), period = 24))
par(mfrow=c(2,2))
acf(ar_model_1$residuals)
pacf(ar_model_1$residuals)
acf(ar_model_2$residuals)
pacf(ar_model_2$residuals)
Box.test(ar_model_1$residuals, type="Ljung")
Box.test(ar_model_2$residuals, type="Ljung")
text(c(ar_model_1$aic, ar_model_2$aic))
print(c(ar_model_1$aic, ar_model_2$aic))
ar_model_1 = arima(res_ts_temp, order = c(1, 0, 0))
arima_model_1 = arima(res_ts_temp, order = c(1, 0, 1), seasonal = list(order = c(0, 0, 1), period = 24))
arima_model_2 = arima(res_ts_temp, order = c(1, 0, 2), seasonal = list(order = c(0, 0, 2), period = 24))
arima_model_3 = arima(res_ts_temp, order = c(1, 0, 3), seasonal = list(order = c(0, 0, 3), period = 24))
par(mfrow=c(2,2))
acf(ar_model_1$residuals)
pacf(ar_model_1$residuals)
acf(ar_model_2$residuals)
pacf(ar_model_2$residuals)
print(c(ar_model_1$aic, arima_model_2$aic))
print(c(ar_model_1$aic, arima_model_2$aic))
Box.test(ar_model_1$residuals, type="Ljung")
Box.test(ar_model_2$residuals, type="Ljung")
Box.test(ar_model_1$residuals, type="Ljung")
Box.test(arima_model_1$residuals, type="Ljung")
Box.test(arima_model_2$residuals, type="Ljung")
Box.test(arima_model_3$residuals, type="Ljung")
print(c(ar_model_1$aic, arima_model_1$aic, arima_model_2$aic, arima_model_3$aic))
?auto.arima
seas.test
?seasonal.test
??seasonal.test
auto_arima_temp = auto.arima(res_ts_temp, stationary = T, seasonal = T)
auto_arima_temp
prevision_auto_arima_temp <- forecast(auto_arima_temp, h = 24)  # Prévision pour les 24 prochaines heures
plot(prevision_auto_arima_temp)
prevision_auto_arima_temp <- forecast(auto_arima_temp, h = 96)  # Prévision pour les 24 prochaines heures
plot(prevision_auto_arima_temp)
prevision_auto_arima_temp <- forecast(auto_arima_temp, h = 24)  # Prévision pour les 24 prochaines heures
plot(prevision_auto_arima_temp)
prevision_auto_arima_temp <- forecast(auto_arima_temp, h = 48)  # Prévision pour les 24 prochaines heures
plot(prevision_auto_arima_temp)
prevision_auto_arima_temp <- forecast(auto_arima_temp, h = 24)  # Prévision pour les 24 prochaines heures
plot(prevision_auto_arima_temp)
prevision_auto_arima_temp <- forecast(auto_arima_temp, h = 24)  # Prévision pour les 24 prochaines heures
plot(prevision_auto_arima_temp, xlim = c(62, 64))
prevision_auto_arima_temp <- forecast(auto_arima_temp, h = 24)  # Prévision pour les 24 prochaines heures
plot(prevision_auto_arima_temp, xlim = c(60, 64))
prevision_auto_arima_temp <- forecast(auto_arima_temp, h = 24)
prevision_arima_temp <- forecast(arima_model_2, h = 24)
plot(prevision_auto_arima_temp, xlim = c(60, 64))
lines(prevision_arima_temp)
prevision_auto_arima_temp <- forecast(auto_arima_temp, h = 24)
prevision_arima_temp <- forecast(arima_model_2, h = 24)
plot(prevision_auto_arima_temp, xlim = c(60, 64))
abline(prevision_arima_temp)
prevision_auto_arima_temp <- forecast(auto_arima_temp, h = 24)
prevision_arima_temp <- forecast(arima_model_2, h = 24)
plot(prevision_auto_arima_temp, xlim = c(60, 64))
abline(prevision_arima_temp, col = "red")
prevision_auto_arima_temp <- forecast(auto_arima_temp, h = 24)
prevision_arima_temp <- forecast(arima_model_2, h = 24)
par(mfrow = c(2,1))
plot(prevision_auto_arima_temp, xlim = c(60, 64))
plot(prevision_arima_temp, xlim = c(60, 64))
prevision_auto_arima_temp <- forecast(auto_arima_temp, h = 24)
prevision_arima_temp <- forecast(arima_model_2, h = 24)
par(mfrow = c(1,2))
plot(prevision_auto_arima_temp, xlim = c(60, 64))
plot(prevision_arima_temp, xlim = c(60, 64))
prevision_auto_arima_temp <- forecast(auto_arima_temp, h = 24)
prevision_arima_temp <- forecast(arima_model_2, h = 24)
par(mfrow = c(1,2))
plot(data_ete$Datetime, data_ete$conso, col = "red", type = "l",
xlim = c(xlim_start, xlim_end),
xlab = "Temps", ylab = "Consommation électrique",
main = "Consommation électrique")
plot(prevision_arima_temp, xlim = c(60, 64))
prevision_auto_arima_temp <- forecast(auto_arima_temp, h = 24)
prevision_arima_temp <- forecast(arima_model_2, h = 24)
par(mfrow = c(1,2))
plot(data_ete$Datetime, data_ete$conso, col = "red", type = "l",
xlim = c(xlim_start, xlim_end),
xlab = "Temps", ylab = "Consommation électrique",
main = "Consommation électrique")
plot(prevision_arima_temp, xlim = c(60, 64), main = "forecast ARIMA(1,0,2)(0,0,2)[24]")
prevision_auto_arima_temp <- forecast(auto_arima_temp, h = 24)
prevision_arima_temp <- forecast(arima_model_2, h = 24)
par(mfrow = c(1,2))
xlim_start <- as.POSIXct("2017-08-29 00:00:00")
xlim_end <- as.POSIXct("2017-09-02 23:00:00")
plot(data$Datetime, data$Temperature, type = "l",
xlim = c(xlim_start, xlim_end),
xlab = "Temps", ylab = "Consommation électrique",
main = "Consommation électrique")
plot(prevision_arima_temp, xlim = c(60, 64), main = "forecast ARIMA(1,0,2)(0,0,2)[24]")
prevision_auto_arima_temp <- forecast(auto_arima_temp, h = 24)
prevision_arima_temp <- forecast(arima_model_2, h = 24)
par(mfrow = c(1,2))
xlim_start <- as.POSIXct("2017-08-28 00:00:00")
xlim_end <- as.POSIXct("2017-09-01 23:00:00")
plot(data$Datetime, data$Temperature, type = "l",
xlim = c(xlim_start, xlim_end),
xlab = "Temps", ylab = "Temperature",
main = "Température")
plot(prevision_arima_temp, xlim = c(60, 64), main = "forecast ARIMA(1,0,2)(0,0,2)[24]")
prevision_auto_arima_temp <- forecast(auto_arima_temp, h = 24)
prevision_arima_temp <- forecast(arima_model_2, h = 24)
par(mfrow = c(1,2))
xlim_start <- as.POSIXct("2017-09-01 00:00:00")
xlim_end <- as.POSIXct("2017-09-01 23:00:00")
plot(data$Datetime, data$Temperature, type = "l",
xlim = c(xlim_start, xlim_end),
xlab = "Temps", ylab = "Temperature",
main = "Température")
plot(prevision_arima_temp, xlim = c(60, 64), main = "forecast ARIMA(1,0,2)(0,0,2)[24]")
prevision_auto_arima_temp <- forecast(auto_arima_temp, h = 24)
prevision_arima_temp <- forecast(arima_model_2, h = 24)
par(mfrow = c(1,2))
xlim_start <- as.POSIXct("2017-09-01 00:00:00")
xlim_end <- as.POSIXct("2017-09-01 23:00:00")
plot(data$Datetime, data$Temperature, type = "l",
xlim = c(xlim_start, xlim_end),
xlab = "Temps", ylab = "Temperature",
main = "Température")
plot(prevision_arima_temp, xlim = c(63, 64), main = "forecast ARIMA(1,0,2)(0,0,2)[24]")
prevision_auto_arima_temp <- forecast(auto_arima_temp, h = 24)
prevision_arima_temp <- forecast(arima_model_2, h = 24)
plot(prevision_arima_temp, main = "forecast ARIMA(1,0,2)(0,0,2)[24]")
prevision_auto_arima_temp <- forecast(auto_arima_temp, h = 24)
prevision_arima_temp <- forecast(arima_model_2, h = 24)
plot(prevision_arima_temp, xlim = c(60, 64), main = "forecast ARIMA(1,0,2)(0,0,2)[24]")
train <- window(ts_temp, end = c(1, 1190))  # Données d'entraînement
test <- window(ts_temp, start = c(1, 1191))  # Données de test
previsions <- forecast(modele_auto_arima, h = length(test))
previsions <- forecast(arima_model_2, h = length(test))
plot(previsions, main = "Prévisions vs Valeurs réelles")
lines(test, col = "red")
legend("topleft", legend = c("Prévisions", "Valeurs réelles"), col = c("blue", "red"), lty = 1)
plot(test, col = "red")
previsions <- forecast(arima_model_2, h = 24)
plot(previsions, main = "Prévisions vs Valeurs réelles")
lines(test, col = "red")
legend("topleft", legend = c("Prévisions", "Valeurs réelles"), col = c("blue", "red"), lty = 1)
previsions <- forecast(arima_model_2, h = 24)
plot(previsions, main = "Prévisions vs Valeurs réelles")
lines(test, col = "red")
legend("topleft", legend = c("Prévisions", "Valeurs réelles"), col = c("blue", "red"), lty = 1)
previsions <- forecast(arima_model_2, h = 24)
plot(previsions, main = "Prévisions vs Valeurs réelles")
plot(test, col = "red")
legend("topleft", legend = c("Prévisions", "Valeurs réelles"), col = c("blue", "red"), lty = 1)
previsions <- forecast(arima_model_2, h = 24)
plot(previsions, main = "Prévisions vs Valeurs réelles")
plot(test, col = "red", xlim = c(1, 2))
legend("topleft", legend = c("Prévisions", "Valeurs réelles"), col = c("blue", "red"), lty = 1)
previsions <- forecast(arima_model_2, h = 24)
plot(previsions, main = "Prévisions vs Valeurs réelles")
plot(test, col = "red", xlim = c(52, 54))
legend("topleft", legend = c("Prévisions", "Valeurs réelles"), col = c("blue", "red"), lty = 1)
previsions <- forecast(arima_model_2, h = 24)
plot(previsions, main = "Prévisions vs Valeurs réelles")
plot(test, col = "red", xlim = c(51, 54))
legend("topleft", legend = c("Prévisions", "Valeurs réelles"), col = c("blue", "red"), lty = 1)
previsions <- forecast(arima_model_2, h = 24)
plot(previsions, main = "Prévisions vs Valeurs réelles")
plot(test, col = "red", xlim = c(50, 54))
legend("topleft", legend = c("Prévisions", "Valeurs réelles"), col = c("blue", "red"), lty = 1)
previsions <- forecast(arima_model_2, h = 24)
plot(previsions, main = "Prévisions vs Valeurs réelles")
plot(test, col = "red", xlim = c(51, 54))
legend("topleft", legend = c("Prévisions", "Valeurs réelles"), col = c("blue", "red"), lty = 1)
previsions <- forecast(arima_model_2, h = 24)
plot(previsions, main = "Prévisions vs Valeurs réelles")
plot(test, col = "red", xlim = c(51, 52))
legend("topleft", legend = c("Prévisions", "Valeurs réelles"), col = c("blue", "red"), lty = 1)
previsions <- forecast(arima_model_2, h = 24)
plot(previsions, main = "Prévisions vs Valeurs réelles", xlim = c(60, 64))
plot(test, col = "red", xlim = c(51, 52))
legend("topleft", legend = c("Prévisions", "Valeurs réelles"), col = c("blue", "red"), lty = 1)
previsions <- forecast(arima_model_2, h = 24)
plot(previsions, main = "Prévisions vs Valeurs réelles", xlim = c(63, 64))
plot(test, col = "red", xlim = c(51, 52))
legend("topleft", legend = c("Prévisions", "Valeurs réelles"), col = c("blue", "red"), lty = 1)
previsions <- forecast(arima_model_2, h = 24)
plot(previsions, main = "Prévisions vs Valeurs réelles", xlim = c(60, 64))
plot(test, col = "red", xlim = c(51, 52))
legend("topleft", legend = c("Prévisions", "Valeurs réelles"), col = c("blue", "red"), lty = 1)
View(prevision_arima_temp)
prev_temp_mean <- forecast(arima_model_2, h = 24)$mean
prev_temp_00 <- prev_temp_mean$mean[1]
prev_temp <- forecast(arima_model_2, h = 24)
prev_temp_mean <- prev_temp$mean
prev_temp_00 <- prev_temp_mean$mean[1]
prev_temp <- forecast(arima_model_2, h = 24)
prev_temp_mean <- prev_temp$mean
prev_temp_00 <- prev_temp$mean[1]
prev_temp_06 <- prev_temp$mean[6]
prev_temp_12 <- prev_temp$mean[12]
prev_temp_18 <- prev_temp$mean[18]
plot(prevision_arima_temp, xlim = c(60, 64), main = "forecast ARIMA(1,0,2)(0,0,2)[24]")
mae <- mean(abs(test - previsions$mean))
print(mae)
previsions <- forecast(arima_model_2, h = 24)
plot(previsions, main = "Prévisions vs Valeurs réelles", xlim = c(60, 64))
plot(test, col = "red", xlim = c(51, 52))
legend("topleft", legend = c("Prévisions", "Valeurs réelles"), col = c("blue", "red"), lty = 1)
previsions <- forecast(arima_model_2, h = 24)
mae <- mean(abs(test - previsions$mean))
print(mae)
previsions <- forecast(arima_model_2, h = length(test))
mae <- mean(abs(test - previsions$mean))
print(mae)
View(previsions)
previsions <- forecast(arima_model_2, h = length(test))
mae <- mean(abs(test - previsions$model$mean))
train <- window(ts_temp, end = c(1, 1190))  # Données d'entraînement
test <- window(ts_temp, start = c(1, 1191))  # Données de test
train <- window(ts_temp, end = c(1, 1190))  # Données d'entraînement
test <- window(ts_temp, start = c(1, 1191))  # Données de test
previsions <- forecast(arima_model_2, h = length(test))
mae <- mean(abs(test - previsions$model$mean))
previsions <- forecast(arima_model_2, h = length(test))
mae <- mean(abs(test - previsions$mean))
print(mae)
previsions <- forecast(arima_model_2, h = length(test))
rmse <- sqrt(mean((test - previsions$mean)^2)
print(rmse)
previsions <- forecast(arima_model_2, h = length(test))
rmse <- sqrt(mean((test - previsions$mean)^2))
print(rmse)
residus_arima <- residuals(auto_arima_temp)
plot(residus_arima, main = "Résidus du modèle ARIMA")
acf(residus_arima, main = "ACF des résidus")
pacf(residus_arima, main = "PACF des résidus")
Box.test(residus_arima, lag = 20, type = "Ljung-Box")
residus_arima <- residuals(arima_model_2)
plot(residus_arima, main = "Résidus du modèle ARIMA")
acf(residus_arima, main = "ACF des résidus")
pacf(residus_arima, main = "PACF des résidus")
Box.test(residus_arima, lag = 20, type = "Ljung-Box")
?residuals
Box.test(arima_model_2$residuals, lag = 20, type = "Ljung-Box")
Box.test(arima_model_2$residuals, lag = 20, type = "Ljung")
Box.test(arima_model_2$residuals, type = "Ljung")
Box.test(arima_model_2$residuals, lag = 24, type = "Ljung")
Box.test(arima_model_2$residuals, type = "Ljung")
Box.test(residus_arima, type = "Ljung-Box")
hist(residus_arima, breaks = 30, main = "Histogramme des résidus", probability = TRUE)
lines(density(residus_arima), col = "red")
hist(residus_arima, breaks = 30, main = "Histogramme des résidus", probability = TRUE)
lines(density(residus_arima), col = "red")
shapiro.test(residus_arima)
hist(residus_arima, breaks = 30, main = "Histogramme des résidus", probability = TRUE)
lines(density(residus_arima), col = "red")
plot(fitted(auto_arima_temp), residus_arima, main = "Résidus vs Valeurs ajustées", xlab = "Valeurs ajustées", ylab = "Résidus")
abline(h = 0, col = "red")
plot(fitted(auto_arima_temp), residus_arima, main = "Résidus vs Valeurs ajustées", xlab = "Valeurs ajustées", ylab = "Résidus")
abline(h = 0, col = "red")
library(lmtest)
bptest(residus_arima ~ fitted(auto_arima_temp))
plot(fitted(auto_arima_temp), residus_arima, main = "Résidus vs Valeurs ajustées", xlab = "Valeurs ajustées", ylab = "Résidus")
abline(h = 0, col = "red")
library(lmtest)
bptest(auto_arima_temp)
plot(fitted(auto_arima_temp), residus_arima, main = "Résidus vs Valeurs ajustées", xlab = "Valeurs ajustées", ylab = "Résidus")
abline(h = 0, col = "red")
library(lmtest)
bptest(auto_arima_temp$model)
plot(fitted(auto_arima_temp), residus_arima, main = "Résidus vs Valeurs ajustées", xlab = "Valeurs ajustées", ylab = "Résidus")
abline(h = 0, col = "red")
library(lmtest)
bptest(fitted(auto_arima_temp))
plot(fitted(auto_arima_temp), residus_arima, main = "Résidus vs Valeurs ajustées", xlab = "Valeurs ajustées", ylab = "Résidus")
abline(h = 0, col = "red")
library(lmtest)
bptest(residus_arima ~ fitted(auto_arima_temp))
?bptest
residus_arima <- residuals(auto_arima_temp)
plot(residus_arima, main = "Résidus du modèle ARIMA")
plot(fitted(auto_arima_temp), residus_arima, main = "Résidus vs Valeurs ajustées", xlab = "Valeurs ajustées", ylab = "Résidus")
abline(h = 0, col = "red")
library(lmtest)
bptest(residus_arima ~ fitted(auto_arima_temp))
ibrary(performance)
library(performance)
performance(auto_arima_temp)
plot(residus_arima, main="Résidus du modèle ARIMA", ylab="Résidus", xlab="Temps")
abline(h=0, col="red")
par(mfrow = c(1,2))
plot(residus_arima, main="Résidus du modèle ARIMA", ylab="Résidus", xlab="Temps")
abline(h=0, col="red")
fitted_values <- fitted(auto_arima_temp)
plot(fitted_values, residus_arima, main="Résidus vs Valeurs Ajustées",
xlab="Valeurs Ajustées", ylab="Résidus")
abline(h=0, col="red")
library(tseries)
arch.test <- arch.test(auto_arima_temp)
library(tseries)
arch.test <- arch.test(auto_arima_temp)
# theme du html document
#cerulean, journal, flatly, darkly, readable, spacelab, united, cosmo, lumen, paper, sandstone, simplex, and yeti
knitr::opts_chunk$set(echo = TRUE)
options(width = 80)
library(readxl)
library(tidyr)
library(dplyr)
library(ggplot2)
library(corrplot)
library(knitr)
library(plotly)
library(gridExtra)
library(performance)
library(forecast)
library(tseries)
scan("seriet1.txt")->seriet1;mean(seriet1);sd(seriet1)
plot.ts(seriet1)
par(mfrow=c(1,1))
acf(seriet1,main="d inconnu et T=4")
ts(seriet1,start=c(1975,1),frequency=4)->ts1
t<-1:180
t1<-ts(t,start=c(1975,1),freq=4)
t2<-ts(t*t,start=c(1975,1),freq=4)
t3<-ts(t^3,start=c(1975,1),freq=4)
par(mfrow=c(1,1))
acf(ts1)
decompose(ts1)$figure
plot(decompose(ts1))
ts1_csv<-ts1-decompose(ts1)$seasonal;mean(ts1) #serie sans saison
plot(decompose(ts1_csv))
lm(ts1~t1)->lm1        #ajustement linéaire avec serie brute (y compris saison)
lm(ts1_csv~t1)->lm1_csv  #ajustement linéaire avec série sans saison
c(summary(lm1)$adj.r.squared,summary(lm1_csv)$adj.r.squared)
lm(ts1_csv~t1+t2)->lm2_csv
lm(ts1_csv~t1+t2+t3)->lm3_csv
c(summary(lm1_csv)$adj.r.squared,summary(lm2_csv)$adj.r.squared,summary(lm3_csv)$adj.r.squared)
lm2_csv$coefficients
# summary(lm2_csv)
decompose(ts1)$figure
ts1r<-ts1_csv-lm2_csv$fitted.values
pB<-Box.test(ts1r,type="Ljung")$p.value;pB
par(mfrow=c(1,2))
acf(ts1r,main="serie1 csv - est. tend."); pacf(ts1r)
text(3,0.3,paste("pval BL=",round(pB,3)))
ar4<-Arima(ts1r,order=c(4,0,0))
ar3<-Arima(ts1r,order=c(3,0,0))
ar2<-Arima(ts1r,order=c(2,0,0))
c(ar2$aic,ar3$aic,ar4$aic)
ma4<-Arima(ts1r,order=c(0,0,4))
ma3<-Arima(ts1r,order=c(0,0,3))
ma2<-Arima(ts1r,order=c(0,0,2))
c(ma2$aic,ma3$aic,ma4$aic)
arma22<-Arima(ts1r,order=c(2,0,2))
arma31<-Arima(ts1r,order=c(3,0,1))
arma13<-Arima(ts1r,order=c(1,0,3))
c(ar4$aic,ma4$aic,arma22$aic,arma31$aic,arma13$aic)
#checkresiduals(arma22)
par(mfrow=c(1,2))
acf(arma22$residuals);pacf(arma22$residuals)
Box.test(arma22$residuals,type="Ljung")$p.value->pB
text(3,0.1,paste("pval BL=",round(pB,3)))
forecast(arma22,h=2)
autoplot(forecast(arma22,h=8))
prev<-lm2_csv$coefficients[1]+lm2_csv$coefficients[2]*181+lm2_csv$coefficients[3]*181^2+decompose(ts1)$figure[1]+forecast(arma22,h=1)$mean
prev
#Arima(ts1,order=c(2,2,2),seasonal=c(0,1,0))->sarima
sarima<-auto.arima(ts1);sarima
forecast(sarima,h=1)
autoplot(forecast(sarima,h=8))
HoltWinters(ts1)->ht
forecast(ht,h=2)
knit_exit()
