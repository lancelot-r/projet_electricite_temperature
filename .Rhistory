plot(predict_hw_temp, xlim = c(63, 66), ylim = c(10, 40), main = "Holt Winters")
hw_temp <- HoltWinters(ts_temp, gamma = T, alpha = T, beta = T)
predict_temp <- forecast(arima_model_1, h = 192)
test_predict_temp <- forecast(auto_arima_temp, h = 192)
predict_temp_season <- forecast(arima_model_2, h = 192)
predict_hw_temp <- forecast(hw_temp, h = 192)
par(mfrow = c(1, 4))
xlim_start <- as.POSIXct("2017-09-01 00:00:00")
xlim_end <- as.POSIXct("2017-09-03 23:00:00")
plot(test_predict_temp, xlim = c(63, 66), ylim = c(10, 40), main = "SARIMA(2,0,0)(2,1,0)[24]")
plot(data$Datetime, data$Temperature, col = "red", type = "l",
xlim = c(xlim_start, xlim_end),
xlab = "Temps", ylab = "Consommation électrique",
main = "Temperature", ylim = c(10, 40))
plot(predict_temp_season, xlim = c(63, 66), ylim = c(10, 40), main = "ARIMA(1,0,2)(0,0,2)[24]")
plot(predict_hw_temp, xlim = c(63, 66), ylim = c(10, 40), main = "Holt Winters")
hw_temp <- HoltWinters(ts_temp, gamma = T, alpha = T, beta = F)
hw_temp <- HoltWinters(ts_temp, gamma = T, alpha = T)
predict_temp <- forecast(arima_model_1, h = 192)
test_predict_temp <- forecast(auto_arima_temp, h = 192)
predict_temp_season <- forecast(arima_model_2, h = 192)
predict_hw_temp <- forecast(hw_temp, h = 192)
par(mfrow = c(1, 4))
xlim_start <- as.POSIXct("2017-09-01 00:00:00")
xlim_end <- as.POSIXct("2017-09-03 23:00:00")
plot(test_predict_temp, xlim = c(63, 66), ylim = c(10, 40), main = "SARIMA(2,0,0)(2,1,0)[24]")
plot(data$Datetime, data$Temperature, col = "red", type = "l",
xlim = c(xlim_start, xlim_end),
xlab = "Temps", ylab = "Consommation électrique",
main = "Temperature", ylim = c(10, 40))
plot(predict_temp_season, xlim = c(63, 66), ylim = c(10, 40), main = "ARIMA(1,0,2)(0,0,2)[24]")
plot(predict_hw_temp, xlim = c(63, 66), ylim = c(10, 40), main = "Holt Winters")
hw_temp <- ets(ts_temp)
predict_temp <- forecast(arima_model_1, h = 192)
test_predict_temp <- forecast(auto_arima_temp, h = 192)
predict_temp_season <- forecast(arima_model_2, h = 192)
predict_hw_temp <- forecast(hw_temp, h = 192)
par(mfrow = c(1, 4))
xlim_start <- as.POSIXct("2017-09-01 00:00:00")
xlim_end <- as.POSIXct("2017-09-03 23:00:00")
plot(test_predict_temp, xlim = c(63, 66), ylim = c(10, 40), main = "SARIMA(2,0,0)(2,1,0)[24]")
plot(data$Datetime, data$Temperature, col = "red", type = "l",
xlim = c(xlim_start, xlim_end),
xlab = "Temps", ylab = "Consommation électrique",
main = "Temperature", ylim = c(10, 40))
plot(predict_temp_season, xlim = c(63, 66), ylim = c(10, 40), main = "ARIMA(1,0,2)(0,0,2)[24]")
plot(predict_hw_temp, xlim = c(63, 66), ylim = c(10, 40), main = "Holt Winters")
hw_temp <- HoltWinters(ts_temp, alpha = T, gamma = T)
ets_temp <- ets(ts_temp)
predict_temp <- forecast(arima_model_1, h = 192)
test_predict_temp <- forecast(auto_arima_temp, h = 192)
predict_temp_season <- forecast(arima_model_2, h = 192)
predict_hw_temp <- forecast(hw_temp, h = 192)
predict_ets_temp <- forecast(ets_temp, h = 192)
par(mfrow = c(1, 4))
xlim_start <- as.POSIXct("2017-09-01 00:00:00")
xlim_end <- as.POSIXct("2017-09-03 23:00:00")
plot(test_predict_temp, xlim = c(63, 66), ylim = c(10, 40), main = "SARIMA(2,0,0)(2,1,0)[24]")
plot(data$Datetime, data$Temperature, col = "red", type = "l",
xlim = c(xlim_start, xlim_end),
xlab = "Temps", ylab = "Consommation électrique",
main = "Temperature", ylim = c(10, 40))
plot(predict_temp_season, xlim = c(63, 66), ylim = c(10, 40), main = "ARIMA(1,0,2)(0,0,2)[24]")
plot(predict_ets_temp, xlim = c(63, 66), ylim = c(10, 40), main = "ets")
plot(predict_hw_temp, xlim = c(63, 66), ylim = c(10, 40), main = "Holt Winters")
predict_temp <- forecast(arima_model_1, h = 192)
test_predict_temp <- forecast(auto_arima_temp, h = 192)
predict_temp_season <- forecast(arima_model_2, h = 192)
predict_hw_temp <- forecast(hw_temp, h = 192)
predict_ets_temp <- forecast(ets_temp, h = 192)
par(mfrow = c(1, 5))
xlim_start <- as.POSIXct("2017-09-01 00:00:00")
xlim_end <- as.POSIXct("2017-09-03 23:00:00")
plot(test_predict_temp, xlim = c(63, 66), ylim = c(10, 40), main = "SARIMA(2,0,0)(2,1,0)[24]")
plot(data$Datetime, data$Temperature, col = "red", type = "l",
xlim = c(xlim_start, xlim_end),
xlab = "Temps", ylab = "Consommation électrique",
main = "Temperature", ylim = c(10, 40))
plot(predict_temp_season, xlim = c(63, 66), ylim = c(10, 40), main = "ARIMA(1,0,2)(0,0,2)[24]")
plot(predict_ets_temp, xlim = c(63, 66), ylim = c(10, 40), main = "ets")
plot(predict_hw_temp, xlim = c(63, 66), ylim = c(10, 40), main = "Holt Winters")
hw_temp <- hw(ts_temp, alpha = T, gamma = T)
hw_temp <- HoltWinters(ts_temp, alpha = T, gamma = T)
ets_temp <- ets(ts_temp)
550374*1.196^3
550374*1.0196^3
data <- read.csv("~/github/projet_electricite_temperature/data/powerconsumption.csv", header=T)
row.names(data)
data <- read.csv("~/github/projet_electricite_temperature/data/powerconsumption.csv", header=T)
col.names(data)
data <- read.csv("~/github/projet_electricite_temperature/data/powerconsumption.csv", header=T)
colnames(data)
data <- read.csv("~/github/projet_electricite_temperature/data/powerconsumption.csv", header=T)
colnames(data)
data <- read.csv("~/github/projet_electricite_temperature/data/powerconsumption.csv", header=T)
data$conso =
data$PowerConsumption_Zone1+
data$PowerConsumption_Zone2+
data$PowerConsumption_Zone3
data = data %>%
select(-PowerConsumption_Zone1, -PowerConsumption_Zone2, -PowerConsumption_Zone3, -Humidity, -WindSpeed, -GeneralDiffuseFlows, -DiffuseFlows)
data$Datetime <- as.POSIXct(data$Datetime, format="%m/%d/%Y %H:%M")
data_ete <- data %>%
filter(month(Datetime) == 7 | month(Datetime) == 8) %>%
filter(minute((Datetime)) == 0) %>%
filter(day(Datetime) <= 31)
colnames(data)
print("Unités : ° celsius / KW/h")
data <- read.csv("~/github/projet_electricite_temperature/data/powerconsumption.csv", header=T)
data$conso =
data$PowerConsumption_Zone1+
data$PowerConsumption_Zone2+
data$PowerConsumption_Zone3
data = data %>%
select(-PowerConsumption_Zone1, -PowerConsumption_Zone2, -PowerConsumption_Zone3, -Humidity, -WindSpeed, -GeneralDiffuseFlows, -DiffuseFlows)
data$Datetime <- as.POSIXct(data$Datetime, format="%m/%d/%Y %H:%M")
data_ete <- data %>%
filter(month(Datetime) == 7 | month(Datetime) == 8) %>%
filter(minute((Datetime)) == 0) %>%
filter(day(Datetime) <= 31)
colnames(data[1])
print("Unités : ° celsius / KW/h")
data <- read.csv("~/github/projet_electricite_temperature/data/powerconsumption.csv", header=T)
data$conso =
data$PowerConsumption_Zone1+
data$PowerConsumption_Zone2+
data$PowerConsumption_Zone3
data = data %>%
select(-PowerConsumption_Zone1, -PowerConsumption_Zone2, -PowerConsumption_Zone3, -Humidity, -WindSpeed, -GeneralDiffuseFlows, -DiffuseFlows)
data$Datetime <- as.POSIXct(data$Datetime, format="%m/%d/%Y %H:%M")
data_ete <- data %>%
filter(month(Datetime) == 7 | month(Datetime) == 8) %>%
filter(minute((Datetime)) == 0) %>%
filter(day(Datetime) <= 31)
colnames(data)
print("Unités : ° celsius / KW/h")
data <- read.csv("~/github/projet_electricite_temperature/data/powerconsumption.csv", header=T)
data$conso =
data$PowerConsumption_Zone1+
data$PowerConsumption_Zone2+
data$PowerConsumption_Zone3
data = data %>%
select(-PowerConsumption_Zone1, -PowerConsumption_Zone2, -PowerConsumption_Zone3, -Humidity, -WindSpeed, -GeneralDiffuseFlows, -DiffuseFlows)
data$Datetime <- as.POSIXct(data$Datetime, format="%m/%d/%Y %H:%M")
data_ete <- data %>%
filter(month(Datetime) == 7 | month(Datetime) == 8) %>%
filter(minute((Datetime)) == 0) %>%
filter(day(Datetime) <= 31)
colnames(data_ete)
print("Unités : ° celsius / KW/h")
data <- read.csv("~/github/projet_electricite_temperature/data/powerconsumption.csv", header=T)
data$conso =
data$PowerConsumption_Zone1+
data$PowerConsumption_Zone2+
data$PowerConsumption_Zone3
data = data %>%
select(-PowerConsumption_Zone1, -PowerConsumption_Zone2, -PowerConsumption_Zone3, -Humidity, -WindSpeed, -GeneralDiffuseFlows, -DiffuseFlows)
data$Datetime <- as.POSIXct(data$Datetime, format="%m/%d/%Y %H:%M")
data_ete <- data %>%
filter(month(Datetime) == 7 | month(Datetime) == 8) %>%
filter(minute((Datetime)) == 0) %>%
filter(day(Datetime) <= 31)
colnames(data_ete)
print("Unités : ° celsius / KW/h")
library(dplyr)
library(lubridate)
library(readr)
library(hms)
library(zoo)
library(forecast)
library(tseries)
data <- read.csv("~/github/projet_electricite_temperature/data/powerconsumption.csv", header=T)
data$conso =
data$PowerConsumption_Zone1+
data$PowerConsumption_Zone2+
data$PowerConsumption_Zone3
data = data %>%
select(-PowerConsumption_Zone1, -PowerConsumption_Zone2, -PowerConsumption_Zone3, -Humidity, -WindSpeed, -GeneralDiffuseFlows, -DiffuseFlows)
data$Datetime <- as.POSIXct(data$Datetime, format="%m/%d/%Y %H:%M")
data_ete <- data %>%
filter(month(Datetime) == 7 | month(Datetime) == 8) %>%
filter(minute((Datetime)) == 0) %>%
filter(day(Datetime) <= 31)
colnames(data_ete)
print("Unités : ° celsius / KW/h")
colnames(data_ete)
print("Unités : ° celsius / KW/h")
print(c("Variables", colnames(data_ete)))
print("Unités : ° celsius / KW/h")
print(c("Variables : ", colnames(data_ete)))
print("Unités : ° celsius / KW/h")
print(f("Variables : " colnames(data_ete)))
print(paste("Variables: ", paste(colnames(data_ete), collapse = ",")))
print("Unités : ° celsius / KW/h")
print(paste("Variables: ", paste(colnames(data_ete), collapse = " , ")))
print("Unités : ° celsius / KW/h")
print(paste("Variables: ", paste(colnames(data_ete), collapse = " , "), "Unités : ° celsius / KW/h"))
print("Unités : ° celsius / KW/h")
print("Variables : ''Datetime'' (date), ''Temperature'' (°c), ''Conso'' (KW/h)")
print("Variables : 'Datetime' (date), 'Temperature' (°c), 'Conso' (KW/h)")
print("Variables : 'Datetime' (date), 'Temperature' (°c), 'conso' (KW/h)")
library(dplyr)
library(lubridate)
library(readr)
library(hms)
library(zoo)
library(forecast)
library(tseries)
library(modelsummary)
data <- read.csv("~/github/projet_electricite_temperature/data/powerconsumption.csv", header=T)
data$conso =
data$PowerConsumption_Zone1+
data$PowerConsumption_Zone2+
data$PowerConsumption_Zone3
data = data %>%
select(-PowerConsumption_Zone1, -PowerConsumption_Zone2, -PowerConsumption_Zone3, -Humidity, -WindSpeed, -GeneralDiffuseFlows, -DiffuseFlows)
data$Datetime <- as.POSIXct(data$Datetime, format="%m/%d/%Y %H:%M")
data_ete <- data %>%
filter(month(Datetime) == 7 | month(Datetime) == 8) %>%
filter(minute((Datetime)) == 0) %>%
filter(day(Datetime) <= 31)
datasummary_skim(penguins)
datasummary_skim(data_ete)
datasummary_skim(data_ete)
datasummary_skim(data_ete)
datasummary_skim(data_ete)
library(dplyr)
library(lubridate)
library(readr)
library(hms)
library(zoo)
library(forecast)
library(tseries)
library(modelsummary)
library(float)
install.packages("float")
library(dplyr)
library(lubridate)
library(readr)
library(hms)
library(zoo)
library(forecast)
library(tseries)
library(modelsummary)
library(float)
data <- read.csv("~/github/projet_electricite_temperature/data/powerconsumption.csv", header=T)
data$conso =
data$PowerConsumption_Zone1+
data$PowerConsumption_Zone2+
data$PowerConsumption_Zone3
data = data %>%
select(-PowerConsumption_Zone1, -PowerConsumption_Zone2, -PowerConsumption_Zone3, -Humidity, -WindSpeed, -GeneralDiffuseFlows, -DiffuseFlows)
data$Datetime <- as.POSIXct(data$Datetime, format="%m/%d/%Y %H:%M")
data_ete <- data %>%
filter(month(Datetime) == 7 | month(Datetime) == 8) %>%
filter(minute((Datetime)) == 0) %>%
filter(day(Datetime) <= 31)
knitr::opts_chunk$set(fig.pos = "H", out.extra = "")
knitr::opts_chunk$set(fig.pos = "H")
datasummary_skim(data_ete)
knit_with_parameters("~/github/projet_electricite_temperature/projet.Rmd")
knitr::opts_chunk$set(echo = TRUE)
datasummary_skim(data_ete)
knitr::opts_chunk$set(echo = F, warning=FALSE)
library(car)
library(dplyr)
library(lubridate)
library(readr)
library(hms)
library(zoo)
library(forecast)
library(tseries)
library(modelsummary)
library(float)
library(knitr)
data <- read.csv("~/github/projet_electricite_temperature/data/powerconsumption.csv", header=T)
data$conso =
data$PowerConsumption_Zone1+
data$PowerConsumption_Zone2+
data$PowerConsumption_Zone3
data = data %>%
select(-PowerConsumption_Zone1, -PowerConsumption_Zone2, -PowerConsumption_Zone3, -Humidity, -WindSpeed, -GeneralDiffuseFlows, -DiffuseFlows)
data$Datetime <- as.POSIXct(data$Datetime, format="%m/%d/%Y %H:%M")
data_ete <- data %>%
filter(month(Datetime) == 7 | month(Datetime) == 8) %>%
filter(minute((Datetime)) == 0) %>%
filter(day(Datetime) <= 31)
data_test <- data %>%
filter((month(Datetime) == 7 | month(Datetime) == 8) |
(month(Datetime) == 9 & day(Datetime) <= 7)) %>%
filter(minute(Datetime) == 0)
print("Variables : 'Datetime' (date), 'Temperature' (°c), 'conso' (KW/h)")
datasummary_skim(data_ete)
ts_temp = ts(data_ete$Temperature, frequency = 24, start = c(1,1))
decompose_temp = decompose(ts_temp)
plot(decompose_temp)
acf(ts_temp, main="ts_temp", lag.max = 192, ylim = c(-1, 1))
par(mfrow=c(1,2))
manual_arima_temp=arima(ts_temp, order = c(0, 0, 0), seasonal = list(order = c(0, 1, 0), period = 24))
kpss.pval = kpss.test(manual_arima_temp$residuals)$p.value
acf(manual_arima_temp$residuals, lag.max = 96, ylim = c(-1, 1), main = "ACF")
pacf(manual_arima_temp$residuals, lag.max = 96, ylim = c(-1, 1), main = "PACF")
text(1.2,0.7,paste("pval kpss=",round(kpss.pval,3)))
qqPlot(manual_arima_temp$residuals)
manual_arima_temp=arima(ts_temp, order = c(2, 0, 0), seasonal = list(order = c(1, 1, 1), period = 24))
pB = Box.test(manual_arima_temp$residuals,type="Ljung")$p.value
par(mfrow=c(1,3))
acf(manual_arima_temp$residuals, main="ACF", ylim = c(-1, 1));pacf(manual_arima_temp$residuals, ylim = c(-1, 1), main = "PACF")
text(0.7,0.7,paste("pval BL=",round(pB,3)))
qqPlot(manual_arima_temp$residuals, main = "QQPlot")
auto_arima_temp <- auto.arima(ts_temp, ic = "bic")
ets_temp <- ets(ts_temp)
pred_arima_temp <- forecast(manual_arima_temp, h = 168)
pred_auto_arima_temp <- forecast(auto_arima_temp, h = 168)
pred_ets_temp <- forecast(ets_temp, h = 168)
ts_test_temp = ts(data_test$Temperature, start = c(1,1), frequency = 24)
plot(ts_test_temp, xlim = c(63,70), ylim = c(15, 35),
xlab = "Date", ylab = "Temperature (°c)",
main = "Comparaison des modèles de prévision de température", col = "black", lwd = "3", xaxt = "n")
axis(1, at = seq(63, 70, by = 1), labels = c("Sept. 01", "Sept. 02", "Sept. 03", "Sept. 04", "Sept. 05", "Sept. 06", "Sept. 07", "Sept. 08"))
lines(pred_arima_temp$mean, col = "#00e4ff", lwd = 2)
lines(pred_auto_arima_temp$mean, col = "blue", lwd = 2)
lines(pred_ets_temp$mean, col = "#ff00e8", lwd = 2)
for(i in 63:70){
abline(v = i, lty = 2)
}
legend("topright",
legend = c("Données réelles", "SARIMA manuel (2,0,0)(1,1,1)[24]", "Auto-SARIMA (2,0,0)(2,1,0)[24]", "ETS (M,Ad,A)"),
col = c("black", "#00e4ff", "blue", "#ff00e8"),
lwd = c(2, 2, 2, 2), cex = 0.7, bg = "white")
plot(ts_test_temp, xlim = c(63, 64))
for(i in seq(63, 64, by = 0.04166667)){
abline(v = i, lty = 2)
}
# Fonction RMSE
rmse <- function(actual, predicted) {
sqrt(mean((actual - predicted)^2))
}
aic_manual_arima_temp <- manual_arima_temp$aic
aic_auto_arima_temp <- auto_arima_temp$aic
aic_ets_temp <- ets_temp$aic
bic_manual_arima_temp <- BIC(manual_arima_temp)
bic_auto_arima_temp <- BIC(auto_arima_temp)
bic_ets_temp <- BIC(ets_temp)
date_j1 = ts_test_temp[1490:1513]
date_j2 = ts_test_temp[1513:1537]
date_j3 = ts_test_temp[1537:1561]
date_j4 = ts_test_temp[1561:1585]
date_j5 = ts_test_temp[1585:1609]
date_j6 = ts_test_temp[1609:1633]
date_j7 = ts_test_temp[1633:1656]
# Création d'un data frame des résultats
rmse_results <- data.frame(
"Nom du modèle" = c("SARIMA manuel (2,0,0)(1,1,1)[24]", "Auto-SARIMA (2,0,0)(2,1,0)[24]", "ETS (M,Ad,A)"),
AIC = c(aic_manual_arima_temp, aic_auto_arima_temp, aic_ets_temp),
BIC = c(bic_manual_arima_temp, bic_auto_arima_temp, bic_ets_temp),
jour_1 = c(rmse(date_j1, pred_arima_temp$mean[1:24]), rmse(date_j1, pred_auto_arima_temp$mean[1:24]), rmse(date_j1, pred_ets_temp$mean[1:24])),
jour_2 = c(rmse(date_j2, pred_arima_temp$mean[24:48]), rmse(date_j2, pred_auto_arima_temp$mean[24:48]), rmse(date_j2, pred_ets_temp$mean[24:48])),
jour_3 = c(rmse(date_j3, pred_arima_temp$mean[48:72]), rmse(date_j3, pred_auto_arima_temp$mean[48:72]), rmse(date_j3, pred_ets_temp$mean[48:72])),
jour_4 = c(rmse(date_j4, pred_arima_temp$mean[72:96]), rmse(date_j4, pred_auto_arima_temp$mean[72:96]), rmse(date_j4, pred_ets_temp$mean[72:96])),
jour_5 = c(rmse(date_j5, pred_arima_temp$mean[96:120]), rmse(date_j5, pred_auto_arima_temp$mean[96:120]), rmse(date_j5, pred_ets_temp$mean[96:120])),
jour_6 = c(rmse(date_j6, pred_arima_temp$mean[120:144]), rmse(date_j6, pred_auto_arima_temp$mean[120:144]), rmse(date_j6, pred_ets_temp$mean[120:144])),
jour_7 = c(rmse(date_j7, pred_arima_temp$mean[144:168]), rmse(date_j7, pred_auto_arima_temp$mean[144:168]), rmse(date_j7, pred_ets_temp$mean[144:168]))
)
kable(rmse_results, digits = 2, caption = "RMSE des modèles pour la semaine du 01/09 au 07/09")
ts_conso = ts(data_ete$conso, frequency = 24, start = c(1,1))
decompose_conso = decompose(ts_conso)
plot(decompose_conso)
acf(ts_conso, main="ts_conso", lag.max = 192, ylim = c(-1, 1))
manual_arima_conso = arima(ts_conso, order = c(0, 1, 0), seasonal = list(order = c(0, 1, 0), period = 24))
kpss.pval = kpss.test(manual_arima_temp$residuals)$p.value
pB <- Box.test(manual_arima_conso$residuals,type="Ljung")$p.value
par(mfrow=c(1,2))
acf(manual_arima_conso$residuals, main="ACF", ylim = c(-1, 1));pacf(manual_arima_conso$residuals, ylim = c(-1, 1), main = "PACF")
text(0.6,0.7,paste("pval kpss=",round(kpss.pval,3)))
text(0.6,0.5,paste("pval Box=",round(pB,3)))
qqPlot(manual_arima_conso$residuals)
manual_arima_conso = arima(ts_conso, order = c(1, 1, 0), seasonal = list(order = c(1, 1, 1), period = 24))
pB <- Box.test(manual_arima_conso$residuals,type="Ljung")$p.value
par(mfrow=c(1,3))
acf(manual_arima_conso$residuals, main="ACF", ylim = c(-1, 1));pacf(manual_arima_conso$residuals, ylim = c(-1, 1), main = "PACF")
text(0.7,0.7,paste("pval BL=",round(pB,3)))
qqPlot(manual_arima_conso$residuals, main = "QQPlot")
auto_arima_conso <- auto.arima(ts_conso, ic = "bic")
ets_conso <- ets(ts_conso)
pred_arima_conso <- forecast(manual_arima_conso, h = 168)
pred_auto_arima_conso <- forecast(auto_arima_conso, h = 168)
pred_ets_conso <- forecast(ets_conso, h = 168)
ts_test_conso = ts(data_test$conso, start = c(1,1), frequency = 24)
plot(ts_test_conso, xlim = c(62,70), ylim = c(30000, 125000),
xlab = "Date", ylab = "Consommation électrique (kWh)",
main = "Comparaison des modèles de prévision de consommation éléctrique", col = "black", lwd = 3, xaxt = "n")
axis(1, at = seq(63, 70, by = 1), labels = c("Sept. 01", "Sept. 02", "Sept. 03", "Sept. 04", "Sept. 05", "Sept. 06", "Sept. 07", "Sept. 08"))
lines(pred_arima_conso$mean, col = "#00e4ff", lwd = 2)
lines(pred_auto_arima_conso$mean, col = "blue", lwd = 2)
lines(pred_ets_conso$mean, col = "#ff00e8", lwd = 2)
for(i in 62:70){
abline(v = i, lty = 2)
}
legend("topright",
legend = c("Données réelles", "SARIMA manuel (1,1,0)(1,1,1)[24]", "Auto-SARIMA (0,1,1)(0,1,1)[24]", "ETS (M,Ad,M)"),
col = c("black", "#00e4ff", "blue", "#ff00e8"),
lwd = c(2, 2, 2, 2), cex = 0.7, bg = "white")
aic_manual_arima_conso <- manual_arima_conso$aic
aic_auto_arima_conso <- auto_arima_conso$aic
aic_ets_conso <- ets_conso$aic
bic_manual_arima_conso <- BIC(manual_arima_conso)
bic_auto_arima_conso <- BIC(auto_arima_conso)
bic_ets_conso <- BIC(ets_conso)
date_j1 = ts_test_conso[1489:1513]
date_j2 = ts_test_conso[1513:1537]
date_j3 = ts_test_conso[1537:1561]
date_j4 = ts_test_conso[1561:1585]
date_j5 = ts_test_conso[1585:1609]
date_j6 = ts_test_conso[1609:1633]
date_j7 = ts_test_conso[1633:1656]
# Création d'un data frame des résultats
rmse_results <- data.frame(
"Nom du  modèle" = c("SARIMA manuel (2,0,0)(1,1,1)[24]", "Auto-SARIMA (2,0,0)(2,1,0)[24]", "ETS (M,Ad,A)"),
AIC = c(aic_manual_arima_conso, aic_auto_arima_conso, aic_ets_conso),
BIC = c(bic_manual_arima_conso, bic_auto_arima_conso, bic_ets_conso),
jour_1 = c(rmse(date_j1, pred_arima_conso$mean[1:24]), rmse(date_j1, pred_auto_arima_conso$mean[1:24]), rmse(date_j1, pred_ets_conso$mean[1:24])),
jour_2 = c(rmse(date_j2, pred_arima_conso$mean[24:48]), rmse(date_j2, pred_auto_arima_conso$mean[24:48]), rmse(date_j2, pred_ets_conso$mean[24:48])),
jour_3 = c(rmse(date_j3, pred_arima_conso$mean[48:72]), rmse(date_j3, pred_auto_arima_conso$mean[48:72]), rmse(date_j3, pred_ets_conso$mean[48:72])),
jour_4 = c(rmse(date_j4, pred_arima_conso$mean[72:96]), rmse(date_j4, pred_auto_arima_conso$mean[72:96]), rmse(date_j4, pred_ets_conso$mean[72:96])),
jour_5 = c(rmse(date_j5, pred_arima_conso$mean[96:120]), rmse(date_j5, pred_auto_arima_conso$mean[96:120]), rmse(date_j5, pred_ets_conso$mean[96:120])),
jour_6 = c(rmse(date_j6, pred_arima_conso$mean[120:144]), rmse(date_j6, pred_auto_arima_conso$mean[120:144]), rmse(date_j6, pred_ets_conso$mean[120:144])),
jour_7 = c(rmse(date_j7, pred_arima_conso$mean[144:168]), rmse(date_j7, pred_auto_arima_conso$mean[144:168]), rmse(date_j7, pred_ets_conso$mean[144:168]))
)
kable(rmse_results, digits = 2, caption = "RMSE des modèles pour la semaine du 01/09 au 07/09")
par(mfrow = c(1,2))
plot(ts_test_temp, xlim = c(63,64), ylim = c(15, 35),
xlab = "Date", ylab = "Temperature (°c)",
main = "ts_temperature (j+1)", col = "black", lwd = "3", xaxt = "n")
axis(1, at = seq(63, 70, by = 1), labels = c("Sept. 01", "Sept. 02", "Sept. 03", "Sept. 04", "Sept. 05", "Sept. 06", "Sept. 07", "Sept. 08"))
lines(pred_arima_temp$mean, col = "#00e4ff", lwd = 2)
lines(pred_ets_temp$mean, col = "#ff00e8", lwd = 2)
for(i in 62:70){
abline(v = i, lty = 2)
}
legend("topright",
legend = c("Données réelles", "SARIMA manuel (2,0,0)(1,1,1)[24]", "ETS(M,Ad,A)"),
col = c("black", "#00e4ff", "#ff00e8"),
lwd = c(2, 2), cex = 0.7, bg = "white")
plot(ts_test_conso, xlim = c(64,65), ylim = c(30000, 125000),
xlab = "Date", ylab = "Consommation électrique (kWh)",
main = "ts_consommation (j+2)", col = "black", lwd = 3, xaxt = "n")
axis(1, at = seq(63, 70, by = 1), labels = c("Sept. 01", "Sept. 02", "Sept. 03", "Sept. 04", "Sept. 05", "Sept. 06", "Sept. 07", "Sept. 08"))
lines(pred_arima_conso$mean, col = "#00e4ff", lwd = 2)
lines(pred_ets_conso$mean, col = "#ff00e8", lwd = 2)
for(i in 62:70){
abline(v = i, lty = 2)
}
legend("topright",
legend = c("Données réelles", "SARIMA manuel (1,1,0)(1,1,1)[24]", "ETS (M,Ad,M)"),
col = c("black", "#00e4ff", "#ff00e8"),
lwd = c(2, 2), cex = 0.7, bg = "white")
par(mfrow = c(1,2))
plot(ts_test_temp, xlim = c(63,64), ylim = c(15, 35),
xlab = "Date", ylab = "Temperature (°c)",
main = "ts_temperature (j+1)", col = "black", lwd = "3", xaxt = "n")
axis(1, at = seq(63, 70, by = 1), labels = c("Sept. 01", "Sept. 02", "Sept. 03", "Sept. 04", "Sept. 05", "Sept. 06", "Sept. 07", "Sept. 08"))
lines(pred_arima_temp$mean, col = "#00e4ff", lwd = 2)
lines(pred_ets_temp$mean, col = "#ff00e8", lwd = 2)
for(i in 62:70){
abline(v = i, lty = 2)
}
legend("topright",
legend = c("Données réelles", "SARIMA manuel (2,0,0)(1,1,1)[24]", "ETS(M,Ad,A)"),
col = c("black", "#00e4ff", "#ff00e8"),
lwd = c(2, 2), cex = 0.7, bg = "white")
plot(ts_test_conso, xlim = c(64,65), ylim = c(30000, 125000),
xlab = "Date", ylab = "Consommation électrique (kWh)",
main = "ts_consommation (j+2)", col = "black", lwd = 3, xaxt = "n")
axis(1, at = seq(63, 70, by = 1), labels = c("Sept. 01", "Sept. 02", "Sept. 03", "Sept. 04", "Sept. 05", "Sept. 06", "Sept. 07", "Sept. 08"))
lines(pred_auto_arima_conso$mean, col = "#00e4ff", lwd = 2)
lines(pred_ets_conso$mean, col = "#ff00e8", lwd = 2)
for(i in 62:70){
abline(v = i, lty = 2)
}
legend("topright",
legend = c("Données réelles", "SARIMA manuel (1,1,0)(1,1,1)[24]", "ETS (M,Ad,M)"),
col = c("black", "#00e4ff", "#ff00e8"),
lwd = c(2, 2), cex = 0.7, bg = "white")
par(mfrow = c(1,2))
plot(ts_test_temp, xlim = c(63,64), ylim = c(15, 35),
xlab = "Date", ylab = "Temperature (°c)",
main = "ts_temperature (j+1)", col = "black", lwd = "3", xaxt = "n")
axis(1, at = seq(63, 70, by = 1), labels = c("Sept. 01", "Sept. 02", "Sept. 03", "Sept. 04", "Sept. 05", "Sept. 06", "Sept. 07", "Sept. 08"))
lines(pred_arima_temp$mean, col = "#00e4ff", lwd = 2)
lines(pred_ets_temp$mean, col = "#ff00e8", lwd = 2)
for(i in 62:70){
abline(v = i, lty = 2)
}
legend("topright",
legend = c("Données réelles", "SARIMA manuel (2,0,0)(1,1,1)[24]", "ETS(M,Ad,A)"),
col = c("black", "#00e4ff", "#ff00e8"),
lwd = c(2, 2), cex = 0.7, bg = "white")
plot(ts_test_conso, xlim = c(64,65), ylim = c(30000, 125000),
xlab = "Date", ylab = "Consommation électrique (kWh)",
main = "ts_consommation (j+2)", col = "black", lwd = 3, xaxt = "n")
axis(1, at = seq(63, 70, by = 1), labels = c("Sept. 01", "Sept. 02", "Sept. 03", "Sept. 04", "Sept. 05", "Sept. 06", "Sept. 07", "Sept. 08"))
lines(pred_auto_arima_conso$mean, col = "#00e4ff", lwd = 2)
lines(pred_arima_conso$mean, col = "blue", lwd = 2)
lines(pred_ets_conso$mean, col = "#ff00e8", lwd = 2)
for(i in 62:70){
abline(v = i, lty = 2)
}
legend("topright",
legend = c("Données réelles", "SARIMA manuel (1,1,0)(1,1,1)[24]", "ETS (M,Ad,M)"),
col = c("black", "#00e4ff", "#ff00e8"),
lwd = c(2, 2), cex = 0.7, bg = "white")
